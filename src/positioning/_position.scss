@use "sass:map";
@use "@theholocron/config/src" as config;
@use "@theholocron/css-syntaxes/src" as syntaxes;
@use "@theholocron/scss-mixins/src/at-rules/breakpoints" as *;
@use "../utils";

/// The position property
/// @since 0.1.0
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/position
/// @param {String} $className ["position"] - a CSS class name that will className all helpers
/// @param {Map} $breakpoints [config.$breakpoints] - a map of grid breakpoints
/// @example scss
///   @include position($className: fd, $breakpoints: ("sm": 480px));
@mixin position($className: "position", $breakpoints: config.$breakpoints) {
	@include utils.responsive-syntaxes-list($syntaxes: syntaxes.$position, $property: "position", $className: $className, $breakpoints: $breakpoints);

	@each $abbrev, $direction in config.$box-directions {
		@each $value in (0, 50, 100) {
			@each $breakpoint in map.keys($breakpoints) {
				@include media-breakpoint-up($breakpoint, $breakpoints) {
					@if ($direction == "") {
						.#{$abbrev}-#{$breakpoint}-#{$value},
						.#{$abbrev}-#{$breakpoint}-#{$value}-up {
							top: $value;
							right: $value;
							bottom: $value;
							left: $value;
						}
					} @else {
						.#{$abbrev}-#{$breakpoint}-#{$value},
						.#{$abbrev}-#{$breakpoint}-#{$value}-up {
							#{$abbrev}: $value;
						}

						.#{$abbrev}-#{$breakpoint}-minus-#{$value},
						.#{$abbrev}-#{$breakpoint}-minus-#{$value}-up {
							#{$abbrev}: -$value;
						}

						@each $axis, $sides in (x: (right, left), y: (top, bottom)) {
							@each $side in $sides {
								.axis-#{$axis}-#{$breakpoint}-#{$value},
								.axis-#{$axis}-#{$breakpoint}-#{$value}-up {
									#{$side}: $value;
									#{$side}: $value;
								}
							}
						}
					}
				}

				@include media-breakpoint-down($breakpoint, $breakpoints) {
					@if ($direction == "") {
						.#{$abbrev}-#{$breakpoint}-#{$value}-down {
							top: $value;
							right: $value;
							bottom: $value;
							left: $value;
						}
					} @else {
						.#{$abbrev}-#{$breakpoint}-#{$value}-down {
							#{$abbrev}: $value;
						}

						.#{$abbrev}-#{$breakpoint}-minus-#{$value}-down {
							#{$abbrev}: -$value;
						}

						@each $axis, $sides in (x: (right, left), y: (top, bottom)) {
							@each $side in $sides {
								.axis-#{$axis}-#{$breakpoint}-#{$value}-down {
									#{$side}: $value;
									#{$side}: $value;
								}
							}
						}
					}
				}

				@include media-breakpoint-only($breakpoint, $breakpoints) {
					@if ($direction == "") {
						.#{$abbrev}-#{$breakpoint}-#{$value}-only {
							top: $value;
							right: $value;
							bottom: $value;
							left: $value;
						}
					} @else {
						.#{$abbrev}-#{$breakpoint}-#{$value}-only {
							#{$abbrev}: $value;
						}

						.#{$abbrev}-#{$breakpoint}-minus-#{$value}-only {
							#{$abbrev}: -$value;
						}

						@each $axis, $sides in (x: (right, left), y: (top, bottom)) {
							@each $side in $sides {
								.axis-#{$axis}-#{$breakpoint}-#{$value}-only {
									#{$side}: $value;
									#{$side}: $value;
								}
							}
						}
					}
				}
			}
		}
	}
}
